// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package http

import "fmt"
import "encoding/json"

// This schema defines the request to execute a zone
type ExecuteZoneRequestJson struct {
	// Seconds corresponds to the JSON schema field "seconds".
	Seconds int `json:"seconds"`
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *ExecuteZoneRequestJson) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if v, ok := raw["seconds"]; !ok || v == nil {
		return fmt.Errorf("field seconds: required")
	}
	type Plain ExecuteZoneRequestJson
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = ExecuteZoneRequestJson(plain)
	return nil
}
